version: "3.8"

x-kong-config: &kong-env
  KONG_DATABASE: ${KONG_DATABASE:-postgres}
  KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
  KONG_PG_HOST: kong-database
  KONG_PG_USER: ${KONG_PG_USER:-kong}
  KONG_PG_PASSWORD: mykongpassword

networks:
  kong-net:
    external: false
    ipam:
      config:
        - subnet: 172.1.1.0/24

services:
  ################################################
  # Kong components (Kong & PostgreSQL Database) #
  ################################################

  kong-migrations:
    image: kong:3.5
    command: kong migrations bootstrap
    environment:
      <<: *kong-env
    networks:
      - kong-net
    restart: on-failure
    depends_on:
      - kong-database

  kong-migrations-up:
    image: kong:3.5
    command: kong migrations up && kong migrations finish
    environment:
      <<: *kong-env
    networks:
      - kong-net
    restart: on-failure
    depends_on:
      - kong-database

  kong:
    image: kong:3.5
    user: "${KONG_USER:-kong}"
    environment:
      <<: *kong-env
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: "${KONG_PROXY_LISTEN:-0.0.0.0:8000, 0.0.0.0:8443 ssl}"
      KONG_ADMIN_LISTEN: "${KONG_ADMIN_LISTEN:-0.0.0.0:8001}"
      KONG_ADMIN_GUI_LISTEN: "${KONG_ADMIN_GUI_LISTEN:-0.0.0.0:8002}"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PREFIX: ${KONG_PREFIX:-/var/run/kong}
      KONG_TRACING_INSTRUMENTATIONS: "request"
    networks:
      - kong-net
    ports:
      - "${KONG_INBOUND_PROXY_LISTEN:-0.0.0.0}:8000:8000/tcp"
      - "${KONG_INBOUND_SSL_PROXY_LISTEN:-0.0.0.0}:8443:8443/tcp"
      - "127.0.0.1:8001:8001/tcp"
      - "127.0.0.1:8444:8444/tcp"
      - "127.0.0.1:8002:8002/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure:5
    read_only: true
    volumes:
      - kong_prefix_vol:${KONG_PREFIX:-/var/run/kong}
      - kong_tmp_vol:/tmp
    security_opt:
      - no-new-privileges

  kong-database:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
      POSTGRES_USER: ${KONG_PG_USER:-kong}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-mykongpassword}
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-d",
          "${KONG_PG_DATABASE:-kong}",
          "-U",
          "${KONG_PG_USER:-kong}",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    stdin_open: true
    tty: true
    networks:
      - kong-net
    volumes:
      - kong_data:/var/lib/postgresql/data

  ##################################################
  # Demo services : govtax, govpension, citizenapi #
  ##################################################
  govtax:
    build:
      context: .
      dockerfile: ./govtax/Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./govtax:/usr/src/govtax/
    ports:
      - 8010:8000
    env_file:
      - ./govtax/.env
    depends_on:
      - govtaxdb
    networks:
      kong-net:
        ipv4_address: 172.1.1.11
    hostname: govtax.local # Set the hostname
  govtaxdb:
    image: postgres:15
    volumes:
      - govtax_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=govtaxuser
      - POSTGRES_PASSWORD=govtaxpassword
      - POSTGRES_DB=govtaxdb
    networks:
      - kong-net
  govpension:
    build:
      context: .
      dockerfile: ./govpension/Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./govpension:/usr/src/govpension/
    ports:
      - 8020:8000
    env_file:
      - ./govpension/.env
    depends_on:
      - govpensiondb
    networks: # new
      kong-net:
        ipv4_address: 172.1.1.12
    hostname: govpension.local
  govpensiondb:
    image: postgres:15
    volumes:
      - govpension_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=govpensionuser
      - POSTGRES_PASSWORD=govpensionpassword
      - POSTGRES_DB=govpensiondb
    networks: # new
      - kong-net
  citizenapi:
    build:
      context: .
      dockerfile: ./citizenapi/Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./citizenapi:/usr/src/citizenapi/
    ports:
      - 8030:8000
    env_file:
      - ./citizenapi/.env
    depends_on:
      - citizenapidb
    networks: # new
      - kong-net
  citizenapidb:
    image: postgres:15
    volumes:
      - citizenapi_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=citizenapiuser
      - POSTGRES_PASSWORD=citizenapipassword
      - POSTGRES_DB=citizenapidb
    networks: # new
      - kong-net

  # ##################################################
  # # Keycloak Service                               #
  # ##################################################
  # keycloak:
  #   image: quay.io/keycloak/keycloak:26.0
  #   ports:
  #     - 8080:8080
  #   environment:
  #     - KEYCLOAK_ADMIN=admin
  #     - KEYCLOAK_ADMIN_PASSWORD=admin
  #     - KC_HOSTNAME=keycloak.local
  #     - KC_HOSTNAME_STRICT=false
  #   command:
  #     - start-dev
  #   restart: unless-stopped
  #   networks:
  #     kong-net:
  #       ipv4_address: 172.1.1.10

volumes:
  kong_data: {}
  kong_prefix_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
  kong_tmp_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
  govtax_data:
  govpension_data:
  citizenapi_data:
